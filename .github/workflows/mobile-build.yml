name: Mobile App Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-client:
    name: Test Client App
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build client
      run: npm run build:client
    - name: Test client
      run: npm run test --workspace=client --if-present

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test-client
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
        ndk-version: 25.2.9519653
    
    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli@latest
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build client
      run: npm run build:client
    
    - name: Initialize Android
      run: tauri android init
      env:
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        NDK_HOME: ${{ env.ANDROID_SDK_ROOT }}/ndk/25.2.9519653
    
    - name: Build Android APK
      run: tauri android build
      env:
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        NDK_HOME: ${{ env.ANDROID_SDK_ROOT }}/ndk/25.2.9519653
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: src-tauri/gen/android/app/build/outputs/apk/*/app-*.apk

  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: test-client
    if: false  # Disable until Tauri 2.x iOS support is stable
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim
    
    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli@latest
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build client
      run: npm run build:client
    
    - name: Initialize iOS (when available)
      run: |
        # This will be enabled when Tauri 2.x iOS support is stable
        # tauri ios init
        # tauri ios build --release
        echo "iOS build will be available when Tauri 2.x iOS support is stable"
        echo "Current status: iOS support is in development"
        echo "For now, focus on Android development"
    
    - name: Upload IPA (when available)
      if: false
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: src-tauri/gen/ios/build/Build/Products/*.ipa

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Android APK
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./artifacts/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/*.apk
        draft: true
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
