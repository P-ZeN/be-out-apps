name: Manual Web Installer

on:
  workflow_dispatch:
    inputs:
      mobile_build_run_id:
        description: 'Run ID of mobile build to use (check Actions page)'
        required: true
        type: string

jobs:
  create-installer:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download iOS Artifacts
      continue-on-error: true
      run: |
        echo "Downloading from run ID: ${{ inputs.mobile_build_run_id }}"
        
        # Use GitHub CLI to download artifacts
        gh run download ${{ inputs.mobile_build_run_id }} --name ios-build-artifacts --dir ios-artifacts || echo "iOS artifacts not found"
        gh run download ${{ inputs.mobile_build_run_id }} --name android-apk --dir android-artifacts || echo "Android artifacts not found"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: List Downloaded Files
      run: |
        echo "=== Downloaded iOS artifacts ==="
        ls -la ios-artifacts/ 2>/dev/null || echo "No iOS artifacts"
        
        echo "=== Downloaded Android artifacts ==="
        ls -la android-artifacts/ 2>/dev/null || echo "No Android artifacts"
        
        echo "=== All mobile files found ==="
        find . -name "*.ipa" -o -name "*.apk" 2>/dev/null || echo "No mobile files found"
    
    - name: Create Web Installer
      run: |
        mkdir -p web-installer
        
        # Check for files
        IPA_FILE=$(find ios-artifacts -name "*.ipa" 2>/dev/null | head -1)
        APK_FILE=$(find android-artifacts -name "*.apk" 2>/dev/null | head -1)
        
        HAS_IOS=false
        HAS_ANDROID=false
        
        if [ -n "$IPA_FILE" ]; then
          echo "Found IPA: $IPA_FILE"
          cp "$IPA_FILE" web-installer/
          HAS_IOS=true
          IPA_NAME=$(basename "$IPA_FILE")
        fi
        
        if [ -n "$APK_FILE" ]; then
          echo "Found APK: $APK_FILE"
          cp "$APK_FILE" web-installer/
          HAS_ANDROID=true
          APK_NAME=$(basename "$APK_FILE")
        fi
        
        # Create simple installer page
        REPO_URL="https://p-zen.github.io/be-out-apps/mobile-installer"
        
        cat > web-installer/index.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BeOut Mobile App Installer</title>
    <style>
        body { font-family: system-ui; max-width: 600px; margin: 50px auto; padding: 20px; }
        .platform { margin: 30px 0; padding: 20px; border: 2px solid #ddd; border-radius: 10px; }
        .button { display: inline-block; background: #007AFF; color: white; padding: 15px 30px; 
                 text-decoration: none; border-radius: 8px; margin: 10px 0; }
        .android .button { background: #34A853; }
    </style>
    <script>
        function showPlatform() {
            const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
            const isAndroid = /android/i.test(navigator.userAgent);
            
            if (isIOS) {
                document.getElementById('device-info').innerHTML = 'üì± iOS device detected';
            } else if (isAndroid) {
                document.getElementById('device-info').innerHTML = 'üì± Android device detected';
            } else {
                document.getElementById('device-info').innerHTML = 'üíª Desktop - choose platform below';
            }
        }
        window.onload = showPlatform;
    </script>
</head>
<body>
    <h1>üì± BeOut Mobile App</h1>
    <div id="device-info"></div>
EOF
        
        # Add iOS section if available
        if [ "$HAS_IOS" = true ]; then
          cat >> web-installer/index.html << EOF
    <div class="platform ios">
        <h2>üçé iOS Installation</h2>
        <p><strong>Requirements:</strong> Safari browser only, device must be registered</p>
        <a href="itms-services://?action=download-manifest&url=${REPO_URL}/manifest.plist" class="button">
            üì• Install iOS App
        </a>
        <p><small>After installation: Settings ‚Üí General ‚Üí VPN & Device Management ‚Üí Trust Developer</small></p>
    </div>
EOF
          
          # Create manifest.plist
          cat > web-installer/manifest.plist << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>items</key>
    <array>
        <dict>
            <key>assets</key>
            <array>
                <dict>
                    <key>kind</key>
                    <string>software-package</string>
                    <key>url</key>
                    <string>${REPO_URL}/${IPA_NAME}</string>
                </dict>
            </array>
            <key>metadata</key>
            <dict>
                <key>bundle-identifier</key>
                <string>com.beout.app</string>
                <key>bundle-version</key>
                <string>1.0</string>
                <key>kind</key>
                <string>software</string>
                <key>title</key>
                <string>BeOut</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
EOF
        fi
        
        # Add Android section if available
        if [ "$HAS_ANDROID" = true ]; then
          cat >> web-installer/index.html << EOF
    <div class="platform android">
        <h2>ü§ñ Android Installation</h2>
        <p><strong>Requirements:</strong> Enable "Unknown sources" in settings</p>
        <a href="${REPO_URL}/${APK_NAME}" class="button" download>
            üì• Download Android APK
        </a>
        <p><small>Tap downloaded file to install</small></p>
    </div>
EOF
        fi
        
        # Close HTML
        cat >> web-installer/index.html << EOF
    
    <div style="margin-top: 40px; padding: 20px; background: #f0f0f0; border-radius: 8px;">
        <h3>üìã Build Info</h3>
        <p>Build: ${{ github.run_number }} | Run ID: ${{ inputs.mobile_build_run_id }}</p>
        <p>Date: $(date -u)</p>
    </div>
</body>
</html>
EOF
        
        echo "Created installer with iOS=$HAS_IOS, Android=$HAS_ANDROID"
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./web-installer
        destination_dir: mobile-installer
